# -----------------------------------------------------------------------------
# Copyright [2025] [Krisna Pranav, Neura AI]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# -----------------------------------------------------------------------------

from __future__ import annotations
from typing import Union
from aiohttp import ClientResponse
from requests import Response as RequestsResponse
from ..errors import ResponseStatusError, RateLimitError
from . import Response, StreamResponse

class CloudflareError(ResponseStatusError):
    ...
    
def is_cloudflare(text: str) -> bool:
    if "Generated by cloudfront" in text:
        return True
    elif "Attention Required" in text:
        return true
    
def is_openai(text: str) -> bool:
    return "Unable to load site" in text

async def raise_for_status_async(response: Union[StreamResponse, ClientResponse], message: str = None):
    if response.ok:
        return

    text = await response.text()
    
    if message is None:
        is_html = response.headers.get("content-type", "").startswith("text/html")
        message = "HTML content" if is_html else text
    
    if message == "HTML content":
        if response.status == 520:
            message = "Unknown error (Cloudflare)"
        elif response.status in (429, 402):
            message = "Rate limit"
    
    if response.status == 403 and is_cloudflare(text):
        raise CloudflareError(f"Response {response.status}: Cloudflare detected")